@startuml
'https://plantuml.com/class-diagram

package Carte{
    class Deck {
        - {static} m_doublon : ArrayList<Integer>
        +<<create>> Deck(joueur : Integer)
        +getPile() : ArrayList<Pokemon>
        +estTire(index : Integer)
        +estVide() : Boolean
    }

    class Defausse {
        +estDefausse(p : Pokemon)
    }

    class Main {

        +<<create>> Main(deck : Deck)
        +getMain() : ArrayList<Pokemon>
        +getIndex(nom : String) : Integer
        +contient(nom : String) : Boolean
        +pioche(deck : Deck)
    }

    class Terrain {
        +<<create>> Terrain()
        +getPokemonJoueur() : ArrayList<Pokemon>
        +getPokemonIA() : ArrayList<Pokemon>
        +ajoutPokemonJoueur(main : Main, indexMain : Integer)
        +ajoutPokemonIA(main : Main)
        +retirePokemonJoueur(index : Integer)
        +retirePokemonIA(index : Integer)
        +IAContient(nom : String) : Boolean
        +joueurContient(nom : String) : Boolean
        +getIndexIA(nom : String) : Integer
        +getIndexJoueur(nom : String) : Integer
        +ajoutDeForceIA(pokemon : Pokemon)
        +ajoutDeForceJoueur(pokemon : Pokemon)
    }

    class Pokedex {
        - {static} m_nomPokemon : ArrayList<String>
        + {static} add(pokemon : Pokemon)
        + {static} getNom() : ArrayList<String>
        + {static} getPokedex() : ArrayList<Pokemon>
    }

}

package Deroulement{
    class Affichage {
      +StartingGame()
      +tuto()
      +tourJoueur(premierJoueur : String)
      +affichageMain(main : Main)
      +affichageTerrain(terrain : Terrain)
      +terrainJoueur(terrain : Terrain)
      +terrainAdverse(terrain : Terrain)
      +affichagePokemon(pokemon : Pokemon)
      +demandeAjout(nombre : Integer)
      +demandeCibleAdverse(terrain : Terrain)
      +demandeCibleHumain(terrain : Terrain)
      +affichagePokemonCombat(combattants : List<Pokemon>)
      +questionAction(etape : Integer)
      +questionAction(etape : Integer, terrain : Terrain)
      +utilisationPouvoir(pouvoir : String, utilisateur : Pokemon, cible : Pokemon)
      +attaqueIA(attaquant : Pokemon, cible : Pokemon)
      +finJeu(Victoire : Boolean)
    }

    class Tour {
      -joueurActif : String
      +<<create>>Tour(humain : Humain, ia : IA, terrain : Terrain, actif : String)
      +changementJoueur()
      +miseEnPlace()
      +deroulementTour()
      +ajoutTerrain(nombre : Integer)
    }
}


package DetailPokemon{
    class Pokemon {
        -m_nom : String
        -m_pvMAX : Integer
        -m_pv : Integer
        -m_attaque : Integer
        -m_possedeAttaque : Boolean
        -m_shiny : Boolean
        +<<create>>Pokemon(nom : String)
        +getNom() : String
        +getNomComparable() : String
        +getType() : Type
        +getPv() : Integer
        +getPvMAX() : Integer
        +setPv(pv : Integer, terrain : Terrain)
        +getAttaqueInitial() : Integer
        +getAttaque() : Integer
        +isShiny() : Boolean
        +setPossedeAttaque(bool : Boolean)
        +getPouvoir() : Pouvoir
        +setPouvoir(p : Pouvoir)
        +isPossedeAttaque() : Boolean
        +getStatut() : Statut
        +setStatut(statut : Statut)
        +getJoueur() : Joueur
        +setJoueur(maitreAbsoluAuquelleJeDoisObeir : Joueur)
        +getBoost() : ArrayList<Boost>
        +ajoutBoost(b : Boost)
        +subitDegat(dmg : Integer, type : Type, joueur : Joueur, terrain : Terrain)
        +affiniteType(type : Type) : Integer
        +estMort() : Boolean
    }

    enum Type{
        FEU
        EAU
        PLANTE
        ACIER
        ROCHE
        VOL
        POISON
        GLACE
        INSECTE
        PSY
        TENEBRE
        FEE
        ELECTRIQUE
        NORMAL
        COMBAT
        SPECTRE
        SOL
        DRAGON
    }

    enum Statut{
        AUCUN
        EMPOISONNE
    }

    class Boost{
        -m_nom : String
        -m_Attaque : Boolean
        -m_valeur : Integer
        -m_dureeInfini : Boolean

        +<<create>>Boost(nom : String, isAttaque : Boolean, valeur : Integer, dureeInfini :  Boolean)
        +isAttaque() : Boolean
        +getValeur() : Integer
        +isDureeInfini() :  Boolean
    }

    package Pouvoirs{
        abstract class Pouvoir{
            +{abstract}getNom() : String
            +UtilisableCeTour()
            +{abstract}utilisable() : Boolean
            +{abstract}cibleAdversaire() : Boolean
            +{abstract}onUse(lanceur : Pokemon, cible : Pokemon, terrain : Terrain)
        }

        class Berserk{
            -m_nbUtil : Integer
            +getNom() : String {redefine}
            +utilisable() : Boolean {redefine}
            +cibleAdversaire() : Boolean {redefine}
            +onUse(lanceur : Pokemon, cible : Pokemon, terrain : Terrain)
        }

        class Empoisonnement{
            -m_UtiliseCeTour : Boolean
            -m_nbUtil : Integer
            +UtilisableCeTour()
            +getNom() : String {redefine}
            +utilisable() : Boolean {redefine}
            +cibleAdversaire() : Boolean {redefine}
            +onUse(lanceur : Pokemon, cible : Pokemon, terrain : Terrain)
        }

        class SoinTotal{
            -m_nbUtil : Integer
            +getNom() : String {redefine}
            +utilisable() : Boolean {redefine}
            +cibleAdversaire() : Boolean {redefine}
            +onUse(lanceur : Pokemon, cible : Pokemon, terrain : Terrain)
        }

        class Kamikaze{
            -m_nbUtil : Integer
            +getNom() : String {redefine}
            +utilisable() : Boolean {redefine}
            +cibleAdversaire() : Boolean {redefine}
            +onUse(lanceur : Pokemon, cible : Pokemon, terrain : Terrain)
        }

        class SoinDeZone{
            -m_UtiliseCeTour : Boolean
            +getNom() : String {redefine}
            +UtilisableCeTour()
            +utilisable() : Boolean {redefine}
            +cibleAdversaire() : Boolean {redefine}
            +onUse(lanceur : Pokemon, cible : Pokemon, terrain : Terrain)
        }

        class SoinSimple{
            -m_UtiliseCeTour : Boolean
            +getNom() : String {redefine}
            +UtilisableCeTour()
            +utilisable() : Boolean {redefine}
            +cibleAdversaire() : Boolean {redefine}
            +onUse(lanceur : Pokemon, cible : Pokemon, terrain : Terrain)
        }

        class Peur{
            -m_nbUtil : Integer
            +getNom() : String {redefine}
            +utilisable() : Boolean {redefine}
            +cibleAdversaire() : Boolean {redefine}
            +onUse(lanceur : Pokemon, cible : Pokemon, terrain : Terrain)
        }

        class FerveurGuerriere{
            -m_nbUtil : Integer
            +getNom() : String {redefine}
            +utilisable() : Boolean {redefine}
            +cibleAdversaire() : Boolean {redefine}
            +onUse(lanceur : Pokemon, cible : Pokemon, terrain : Terrain)
        }
    }
}

package Personnage{
    abstract class Joueur{
        +<<create>>Joueur(deck : Deck)
        +getM_deck() : Deck
        +pioche()
        +getM_defausse() : Defausse
        +defausse(p : Pokemon)
        +getM_main() : Main
        +getMainListe() : ArrayList<Pokemon>
        +{abstract} pokemonEnterre(victime : Pokemon, sceneDuCrime : Terrain)
        +{abstract} actionDuTour(terrain : Terrain, adversaire : Joueur) : Boolean
    }

    class Humain {
        +<<create>>Humain(deck : Deck)
        +pokemonDeuil(victime : Pokemon, sceneDuCrime : Terrain){redefines}
        +ajoutPokemon(terrain : Terrain)
        +actionDuTour(terrain : Terrain, adversaire : Joueur) : Boolean {redefines}
        +victoireAdversaire(terrain : Terrain) : Boolean {redefines}
        +pressEnter()
    }

    class IA {
        +<<create>> IA(deck : Deck)
        +pokemonDeuil(victime : Pokemon, sceneDuCrime : Terrain) {redefines}
        +actionDuTour(terrain : Terrain, adversaire : Joueur) : Boolean {redefines}
        +victoireAdversaire(terrain : Terrain) : Boolean {redefines}
    }
}

package GestionMusique{
    class Musique {
        +Ecoute(chemin : String)
    }
}



Deck"*" <--o "20..21\n-m_pile"Pokemon : "compose <"
Deck .> FerveurGuerriere : <<use>>
Deck .> Berserk : <<use>>
Deck .> Empoisonnement : <<use>>
Deck .> SoinDeZone : <<use>>
Deck .> SoinSimple : <<use>>
Deck .> SoinTotal : <<use>>
Deck .> Peur : <<use>>
Deck .> Kamikaze : <<use>>

Defausse"*" <--o "*\n-m_defausse"Pokemon : "est envoyé dans <"

Main <--o Deck : "fournis <"
Main"*" <--o "*\n-m_pokemonMain"Pokemon: "est contenu dans <"

Pokedex"1" <--* "*\n{static} -m_pokedex"Pokemon



Terrain <--o Main : "envoie dans <"
Terrain"*" <--o "*\n-m_pokemonJoueur"Pokemon : "s'affronte dans <"
Terrain"*" <--o "*\n-m_pokemonIA"Pokemon : "s'affronte dans <"



Affichage <.> FerveurGuerriere : <<use>>
Affichage <.> Berserk : <<use>>
Affichage <.> Empoisonnement : <<use>>
Affichage <.> SoinDeZone : <<use>>
Affichage <.> SoinSimple : <<use>>
Affichage <.> SoinTotal : <<use>>
Affichage <.> Peur : <<use>>
Affichage <.> Kamikaze : <<use>>
Affichage <.> Main : <<use>>
Affichage <.> Terrain : <<use>>
Affichage <.> Pokemon : <<use>>

Tour"1" <--o "1\n-m_humain"Humain : "joue durant <"
Tour"1" <--o "1\n-m_IA"IA : "joue durant <"
Tour"1" <--o "1\n-m_terrain"Terrain : "est utilisé pendant <"
Tour"*" <--o "1\n-m_affichage"Affichage : "est utilisé pendant <"
Tour <--o Pokemon : "agit durant <"
Tour .> Boost : <<use>>




Pouvoir <|-- FerveurGuerriere
Pouvoir <|-- Berserk
Pouvoir <|-- Empoisonnement
Pouvoir <|-- SoinDeZone
Pouvoir <|-- SoinSimple
Pouvoir <|-- SoinTotal
Pouvoir <|-- Peur
Pouvoir <|-- Kamikaze
Pouvoir .> Pokemon : <<use>>
Pouvoir .> Terrain : <<use>>


FerveurGuerriere .> Boost : <<use>>
Berserk .> Boost : <<use>>
Empoisonnement .> Statut : <<use>>
Peur .> Boost : <<use>>


Pokemon <-* "1\n-m_type"Type : "est attribué à <"
Pokemon <-* "1\n-m_statut"Statut : "affecte par <"
Pokemon <-* "*\n-m_boost"Boost : "affecte par <"
Pokemon <-* "1\n-m_pouvoir"Pouvoir : "est utilisable par <"
Pokemon <-o "1\n-m_joueur"Joueur : "possède <"
Pokemon .> Terrain : <<use>>



Humain .> Affichage : <<use>>

IA .> Affichage : <<use>>

Joueur <--* "1\n #m_deck"Deck : "est joué par <"
Joueur <--* "1\n #m_defausse"Defausse : "concerne <"
Joueur <--* "1\n #m_main"Main : "est possédé par <"
Joueur .> Pokemon : <<use>>
Joueur .> Terrain : <<use>>
Joueur <|-- Humain
Joueur <|-- IA

@enduml